(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,r(o.key),o)}}function n(t,e,n){return(e=r(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(n)?n:String(n)}var o=function(){function t(e,r,o,i,u,c,a){var l=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n(this,"toggleClassLikeElement",(function(t){t.classList.toggle(l._cardConfig.cardLikeActiveClass)})),n(this,"_countingOtherLikes",(function(){for(var t=0;t<l._likeArray.length;){if(l._likeArray[t]._id===l._userId)return l._ownerLike=!0;t++}})),n(this,"countingQuantityLike",(function(t){l._cardCounterSelector.textContent=t})),n(this,"alertForDelete",(function(){l._handleAlertPopur(l._elementId,l._element)})),this._templateSelector=o,this._cardConfig,this._handleOpenPopup=i,this._handleAlertPopur=u,this._link=e.link,this._title=e.name,this._userId=a,this._elementId=e._id,this._likeArray=e.likes,this._likeCounter=e.likes.length,this._elementLike=c,this._strangerId=e.strangerId,this._ownerLike=!1,this._getTemplate()}var r,o;return r=t,(o=[{key:"_toggleLike",value:function(){this._btnLike.classList.toggle(this._cardConfig.cardLikeActiveClass)}},{key:"_getTemplate",value:function(){this._template=document.querySelector(this._cardConfig.cardTemplate).content.querySelector(this._cardConfig.cardSelector)}},{key:"create",value:function(){return this._card=this._getTemplate(),this._element=this._template.cloneNode(!0),this._cardImg=this._element.querySelector(this._cardConfig.cardImgSelector),this._cardTitle=this._element.querySelector(this._cardConfig.cardTitleSelector),this._btnLike=this._element.querySelector(this._cardConfig.cardLikeSelector),this._btnDelete=this._element.querySelector(this._cardConfig.cardBtnDeleteSelector),this._cardImg.src=this._data.link,this._cardTitle.textContent=this._data.name,this._cardImg.alt=this._data.name,this._cardLikeCounter=this._element.querySelector(this._cardConfig.cardCounterSelector),this._userId!==this._ownerId&&this._btnDelete.remove(),this.countingQuantityLike(this._likeCounter),this.setEventListeners(),this._element}},{key:"setEventListeners",value:function(){var t=this;this._countingOtherLikes()&&this._btnLike.classList.add(this._cardConfig.cardLikeActiveClass),this._btnLike.addEventListener("click",(function(){t._ownerLike?(t._elementLike("DELETE",t._cardId,t._btnLike),t._ownerLike=!1):(t._elementLike("PUT",t._cardId,t._btnLike),t._ownerLike=!0)})),this._btnDelete&&this._btnDelete.addEventListener("click",(function(){t._handleAlertPopur()})),this._cardImg.addEventListener("click",(function(){t._handleOpenPopup(t._title,t._link)}))}}])&&e(r.prototype,o),Object.defineProperty(r,"prototype",{writable:!1}),t}();function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==i(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===i(o)?o:String(o)),r)}var o}var c=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)}var e,n;return e=t,(n=[{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.classList.remove(this._config.errorClass),e.textContent="",t.classList.remove(this._config.typeError)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector(".".concat(t.id,"-error"));n.classList.add(this._config.errorClass),n.textContent=e,t.classList.add(this._config.typeError)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_disableButton",value:function(){this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButton",value:function(){this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState()}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&u(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==a(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===a(o)?o:String(o)),r)}var o}var s=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=e,this._renderedItems=items,this._container=n}var e,n;return e=t,(n=[{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.append(t)}},{key:"addNewItem",value:function(t){this._container.prepend(t)}}])&&l(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),f={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:".popup__submit_inactive",inputErrorClass:".popup__input-error",errorClass:".popup__input-error_visible",typeError:".popup__input_type_error"},p={cardTemplate:"#element-template",cardSelector:".element",cardImgSelector:".element__img",cardTitleSelector:".element__title",cardLikeSelector:".element__button-like",cardLikeActiveClass:"element__button-like_active",cardCounterSelector:".element__like-counter",cardBtnDeleteSelector:".element__del-btn"},y={popupEditAvatar:".popup-avatar",popupEdit:".popup-edit",popupAdd:".popup-add",popupBigImg:".popup_open_big-img",popupAlert:".popup-warning"},h=(document.querySelectorAll(".popup"),document.forms["popup-edit__form"]),d=document.forms["popup-add__form"],m=document.forms["popup-edit-avatar__form"],v=document.querySelector(".profile__edit-button"),_=document.querySelector(".profile__add-button"),b=document.querySelector(".profile__edit-btn_avatar"),g=document.querySelector(".popup__input_text_type-username"),S=document.querySelector(".popup__input_text_type-about"),w=(document.querySelector(".popup__input_text_type-title"),document.querySelector(".popup__input_text_type-title"),document.querySelector(".elements")),k=".popup__submit",E="Сохранение...";function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}var j=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=e,this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),this._popup.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_closePopupByOverlayClick",value:function(t){t.target.classList.contains("popup")&&this.close()}},{key:"setEventListeners",value:function(){var t=this;(evt.target.classList.contains("popup_opened")||evt.target.classList.contains("popup__button-closed"))&&this.close(),this._popup.addEventListener("mousedown",(function(e){t._closePopupByOverlayClick(e)}))}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==L(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},I.apply(this,arguments)}function T(t,e){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},T(t,e)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}var B=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&T(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=A(r);if(o){var n=A(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===L(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e,n=t.popupSelector,r=t.formSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,n))._popup=n,e._formSubmit=r,e._form=e._popup.querySelector(".popup__form"),e._inputList=e._form.querySelectorAll(".popup__input"),e}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputValues={},this._inputList.forEach((function(e){return t._inputValues[e.name]=e.value})),this._inputValues}},{key:"setEventListeners",value:function(){var t=this;I(A(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._formSubmit(t._getInputValues()),t.close()}))}},{key:"close",value:function(){I(A(u.prototype),"close",this).call(this),this._form.reset()}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(j);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}var x=function(){function t(e){var n=e.name,r=e.about,o=e.avatar;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n,this._info=r,this_avatar=o}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,info:this._info.textContent}}},{key:"getUserId",value:function(){return this._userId}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about,r=t.avatar;this._avatar.src=r,this._avatar.alt=e,this._userId=id,this._name.textContent=e,this._info.textContent=n}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function D(t){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},D(t)}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==D(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=F(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},U.apply(this,arguments)}function N(t,e){return N=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},N(t,e)}function F(t){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},F(t)}var J=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&N(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=F(r);if(o){var n=F(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===D(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupImg=e._popup.querySelector(".popup__img"),e._popupTitle=e._popup.querySelector(".popup__title-img"),e}return e=u,(n=[{key:"open",value:function(t,e){U(F(u.prototype),"open",this).call(this)}}])&&V(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(j);function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==Q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===Q(o)?o:String(o)),r)}var o}var M=function(t){return t.ok?t.json():Promise.reject(t.status)},z=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var e,n;return e=t,(n=[{key:"installAvatar",value:function(t){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(M)}},{key:"getInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this.headers}).then(M)}},{key:"setInfo",value:function(t){var e=t.name,n=t.about;return fetch("".concat(this._url,"/users/me"),{headers:this.headers,method:"PATCH",body:JSON.stringify({name:e,about:n})}).then(M)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._Url,"/cards"),{headers:this._headers}).then(M)}},{key:"getPlaceCard",value:function(t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})}).then(M)}},{key:"likeCard",value:function(t,e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:t,headers:this._headers}).then((function(t){return M(t)}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._url,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return M(t)}))}}])&&H(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function $(t){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$(t)}function G(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==$(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===$(o)?o:String(o)),r)}var o}function K(){return K="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=X(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},K.apply(this,arguments)}function W(t,e){return W=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},W(t,e)}function X(t){return X=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},X(t)}var Y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&W(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=X(r);if(o){var n=X(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===$(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._submitBtn=n._popup.querySelector(".popup__submit"),n._handleFormSubmit=e,n}return e=u,(n=[{key:"open",value:function(t,e){K(X(u.prototype),"open",this).call(this),this._cardId=t,this._cardElemment=e}},{key:"setEventListeners",value:function(){var t=this;K(X(u.prototype),"setEventListeners",this).call(this),this._submitBtn.addEventListener("click",(function(){t._handleFormSubmit(t._cardId,t._cardElemment)}))}}])&&G(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(j);function Z(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var tt=new z({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"bdecdc76-75a5-40e2-94d6-35ac4e7b5bcc","Content-Type":"application/json"}}),et=new J(y.popupBigImg),nt=new x({profileAvatarSelector:".profile__avatar",profileTitleSelector:".profile__title",profileSubtitleSelector:".profile__subtitle"});Promise.all([tt.getInfo(),tt.getInitialCards()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,c=[],a=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;a=!1}else for(;!(a=(r=i.call(n)).done)&&(c.push(r.value),c.length!==e);a=!0);}catch(t){l=!0,o=t}finally{try{if(!a&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return c}}(e,n)||function(t,e){if(t){if("string"==typeof t)return Z(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];return nt.setUserInfo(o),i})).then((function(t){it.renderCards(t)})).catch((function(t){return console.log(t)}));var rt=new Y(y.confirmPopup,(function(t,e){tt.deleteCard(t).then((function(){e.remove()})).then((function(){rt.close()})).catch((function(t){console.log(t)}))})),ot=function(t,e){var n=new o(t,p,e,ft,(function(t,e,r){tt.likeCard(t,e,r).then((function(t){n.countingQuantityLike(t.likes.length),n.toggleClassLikeElement(r),n.handleOpenPopup(popupBigImg)})).catch((function(t){return console.log(t)}))}),nt.getUserId()),r=n.create();return it.addItem(r),r};et.setEventListeners();var it=new s((function(t){it.addNewItem(ot(t,(function(){st(t)})))}),w);function ut(t,e){t.textContent=e}it.renderItems();var ct=new B(y.popupE,(function(t,e){var n=e.textContent;ut(e,E),tt.setInfo(t).then((function(t){nt.setUserInfo(t)})).then((function(){return at.close()})).catch((function(t){console.log(t)})).finally((function(){ut(e,n)}))}),k),at=new B(y.popupAdd,(function(t,e){var n=e.textContent;ut(e,E),tt.getPlaceCard(t).then((function(t){it.addItem(ot(t,(function(){st(t)})))})).then((function(){at.close()})).catch((function(t){console.log(t)})).finally((function(){ut(e,n)}))}),k),lt=new B(y.popupEditAvatar,(function(t,e){var n=e.textContent;ut(e,E),tt.installAvatar(t.link).then((function(t){nt.setUserInfo(t)})).then((function(){lt.close()})).catch((function(t){console.log(t)})).finally((function(){ut(e,n)}))}),k),st=function(t){et.open(t.title,t.link)},ft=function(t,e){rt.open(t,e)};b.addEventListener("click",(function(){lt.open()})),v.addEventListener("click",(function(t){t.preventDefault();var e=nt.getUserInfo(),n=e.name,r=e.info;g.value=n,S.value=r,pt.resetValidation(),ct.open()})),_.addEventListener("click",(function(){at.open()})),ct.setEventListeners(),at.setEventListeners(),rt.setEventListeners(),lt.setEventListeners(),new yt(f,m).enableValidation();var pt=new c(f,d);pt.enableValidation();var yt=new c(f,h);yt.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,